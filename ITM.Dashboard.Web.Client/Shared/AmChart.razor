@* // ITM.Dashboard.Web.Client/Shared/AmChart.razor *@
@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<div id="@ChartId" style="width: 100%; height: @Height;"></div>

@code {
    [Parameter]
    public string ChartId { get; set; } = $"amchart-{Guid.NewGuid()}";

    [Parameter]
    public string ChartType { get; set; } = "XYChart"; // "XYChart", "PieChart"

    [Parameter]
    public object ChartData { get; set; }

    [Parameter]
    public object ChartConfig { get; set; }

    [Parameter]
    public string Height { get; set; } = "400px";

    [CascadingParameter(Name = "IsDarkMode")]
    private bool IsDarkMode { get; set; }

    // OnAfterRenderAsync는 컴포넌트가 화면에 렌더링된 "후에" 호출됩니다.
    // 이 시점에는 div id가 DOM에 존재하므로 JS가 요소를 찾을 수 있습니다.
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (ChartData != null && ChartConfig != null)
        {
            // JS Interop을 호출하여 차트를 생성하거나 업데이트합니다.
            await JSRuntime.InvokeVoidAsync("AmChartsInterop.createOrUpdateChart", ChartId, ChartType, ChartData, ChartConfig, IsDarkMode);
        }
    }

    // 컴포넌트가 소멸될 때 JS에서 생성한 차트 객체도 함께 제거하여 메모리 누수를 방지합니다.
    public async ValueTask DisposeAsync()
    {
        await JSRuntime.InvokeVoidAsync("AmChartsInterop.disposeChart", ChartId);
    }
}
